CREATE TABLE IF NOT EXISTS Users (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Nickname TEXT NOT NULL,
    FirstName  TEXT NOT NULL,
    LastName  TEXT NOT NULL,
    Gender TEXT CHECK(Gender IN ('Male', 'Female')),
    Email VARCHAR(50) NOT NULL UNIQUE,
    Age VARCHAR(2) NOT NULL,
    PassWord CHAR(30) NOT NULL,
    ConfirmPassword CHAR(30) NOT NULL,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    Session TEXT,
    Expired DATE
);

CREATE TABLE IF NOT EXISTS Posts (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Title CHAR(50),
    Content TEXT,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    ID_User INTEGER,
    FOREIGN KEY (ID_User) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Category (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name_Category TEXT UNIQUE
);

CREATE TABLE IF NOT EXISTS Post_Category(
    ID_Post INTEGER,
    ID_Category INTEGER,
    PRIMARY KEY (ID_Post , ID_Category),
    FOREIGN KEY (ID_Post) REFERENCES Posts(ID) ON DELETE CASCADE ON UPDATE CASCADE, 
    FOREIGN KEY (ID_Category) REFERENCES Category(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Comment (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Content TEXT,
    ID_User INTEGER,
    ID_Post INTEGER,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_User) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Post) REFERENCES Posts(ID) on DELETE CASCADE ON UPDATE CASCADE 
);

CREATE TABLE IF NOT EXISTS Likes_Posts (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Status TEXT CHECK(Status IN ('like', 'dislike')),
    ID_User INTEGER,
    ID_Post INTEGER,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_User) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Post) REFERENCES Posts(ID) on DELETE CASCADE ON UPDATE CASCADE 
);

CREATE TABLE IF NOT EXISTS Likes_Comment (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Status TEXT CHECK(Status IN ('like', 'dislike')),
    ID_User INTEGER,
    ID_Comment INTEGER,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_User) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ID_Comment) REFERENCES Comment(ID) on DELETE CASCADE ON UPDATE CASCADE 
);

CREATE TABLE IF NOT EXISTS Chat (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Content TEXT,
    Sender INTEGER,
    Receiver INTEGER,
    DateCreation DATE DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Sender) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Receiver) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT OR IGNORE INTO Category (Name_Category) VALUES ('Coding'),('Technology'),('Lifestyle'),('Gaming'),('Sports'),('Music'),('Movies'),('Food'),('Travel'),('Other');
